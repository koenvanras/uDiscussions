{"version":3,"file":"documenttypesettings.context-GaBIPoHK.js","sources":["../../../assets/src/workspaces/views/documenttypesettings.context.ts"],"sourcesContent":["\r\nimport { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { UmbControllerHostElement } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\r\nimport { UmbObjectState } from \"@umbraco-cms/backoffice/observable-api\";\r\nimport { DocumentTypeSettingsSchema } from \"../../api\";\r\nimport { DocumentTypeSettingsRespository } from \"../../repository/documenttypesettings.repository\";\r\nimport { UMB_ACTION_EVENT_CONTEXT, UmbActionEventContext } from \"@umbraco-cms/backoffice/action\";\r\nimport { UmbWorkspaceContext } from \"@umbraco-cms/backoffice/workspace\";\r\nimport { DOCUMENTTYPE_SETTINGS_ENTITY, DOCUMENTTYPE_SETTINGS_WORKSPACE_ALIAS } from \"../manifest\";\r\nimport { UMB_DOCUMENT_TYPE_WORKSPACE_CONTEXT } from \"@umbraco-cms/backoffice/document-type\";\r\n\r\nexport class DocumentTypeSettingsContext extends UmbControllerBase implements UmbWorkspaceContext {\r\n    public readonly workspaceAlias: string = DOCUMENTTYPE_SETTINGS_WORKSPACE_ALIAS;\r\n    \r\n    #repository: DocumentTypeSettingsRespository;\r\n    #actionEventContext?: UmbActionEventContext;\r\n\r\n    #documentTypeSettings = new UmbObjectState<DocumentTypeSettingsSchema | undefined>(undefined);\r\n    public readonly documentTypeSettings = this.#documentTypeSettings.asObservable();\r\n\r\n    #documentType: string = \"\";\r\n\r\n    constructor(host:UmbControllerHostElement) {\r\n        super(host);\r\n\r\n        this.provideContext(DOCUMENTTYPE_SETTINGS_CONTEXT, this);\r\n        this.#repository = new DocumentTypeSettingsRespository(this);\r\n\r\n        this.consumeContext(UMB_ACTION_EVENT_CONTEXT, (_instance) => {\r\n            if (this.#actionEventContext) {\r\n                return;\r\n            }\r\n            this.#actionEventContext = _instance;\r\n        });\r\n\r\n        this.consumeContext(UMB_DOCUMENT_TYPE_WORKSPACE_CONTEXT, (_instance) => {\r\n            _instance.unique.subscribe((value: string) => {\r\n                this.#documentType = value.toString();\r\n            });\r\n        });\r\n    }\r\n    \r\n    async getDocumentTypeSettings() {\r\n        if (this.#documentType) {\r\n            const { data } = await this.#repository.getDocumentTypeSettings(this.#documentType);\r\n\r\n            if (data) {\r\n                this.#documentTypeSettings.setValue(data);\r\n            } else {\r\n                this.#documentTypeSettings.setValue(undefined);\r\n            }\r\n        }\r\n    }\r\n\r\n    async setCommentsEnabled(enabled: boolean) {\r\n        this.#actionEventContext?.addEventListener(\"document.save\", this.#save);\r\n        const data = this.#documentTypeSettings.getValue();\r\n\r\n        if (data) {\r\n            this.#documentTypeSettings.setValue({\r\n                id: data.id,\r\n                documentType: data.documentType,\r\n                commentsEnabled: enabled\r\n            });\r\n        } else {\r\n            this.#documentTypeSettings.setValue({\r\n                id: 0,\r\n                documentType: this.#documentType,\r\n                commentsEnabled: enabled\r\n            });\r\n        }\r\n    }\r\n\r\n    #save = () => {\r\n        this.save();\r\n    }\r\n\r\n    public save() {\r\n        var settings = this.#documentTypeSettings.getValue();\r\n\r\n        if (settings) {\r\n            this.#repository?.setDocumentTypeSettings(settings);\r\n        }\r\n    }\r\n\r\n    getEntityType(): string {\r\n        return DOCUMENTTYPE_SETTINGS_ENTITY;\r\n    }\r\n}\r\n\r\nexport default DocumentTypeSettingsContext;\r\n\r\nexport const DOCUMENTTYPE_SETTINGS_CONTEXT = \r\n    new UmbContextToken<DocumentTypeSettingsContext>(DocumentTypeSettingsContext.name);\r\n"],"names":["DocumentTypeSettingsContext","UmbControllerBase","host","__privateAdd","_repository","_actionEventContext","_documentTypeSettings","_documentType","_save","DOCUMENTTYPE_SETTINGS_WORKSPACE_ALIAS","__privateSet","UmbObjectState","__privateGet","DOCUMENTTYPE_SETTINGS_CONTEXT","DocumentTypeSettingsRespository","UMB_ACTION_EVENT_CONTEXT","_instance","UMB_DOCUMENT_TYPE_WORKSPACE_CONTEXT","value","data","enabled","_a","settings","DOCUMENTTYPE_SETTINGS_ENTITY","UmbContextToken"],"mappings":";;;;;;;;;;;;AAYO,MAAMA,UAAoCC,EAAiD;AAAA,EAW9F,YAAYC,GAA+B;AACvC,UAAMA,CAAI;AATd,IAAAC,EAAA,MAAAC;AACA,IAAAD,EAAA,MAAAE;AAEA,IAAAF,EAAA,MAAAG;AAGA,IAAAH,EAAA,MAAAI;AAqDA,IAAAJ,EAAA,MAAAK;AA7DA,SAAgB,iBAAyBC,GAKjBC,EAAA,MAAAJ,GAAA,IAAIK,EAAuD,MAAS,IAC5E,KAAA,uBAAuBC,EAAA,MAAKN,GAAsB,aAAa,GAEvDI,EAAA,MAAAH,GAAA,KAqDxBG,EAAA,MAAAF,GAAQ,MAAM;AACV,WAAK,KAAK;AAAA,IACd,IAlDS,KAAA,eAAeK,GAA+B,IAAI,GAClDH,EAAA,MAAAN,GAAc,IAAIU,EAAgC,IAAI,IAEtD,KAAA,eAAeC,GAA0B,CAACC,MAAc;AACzD,MAAIJ,EAAA,MAAKP,MAGTK,EAAA,MAAKL,GAAsBW;AAAA,IAAA,CAC9B,GAEI,KAAA,eAAeC,GAAqC,CAACD,MAAc;AAC1D,MAAAA,EAAA,OAAO,UAAU,CAACE,MAAkB;AACrC,QAAAR,EAAA,MAAAH,GAAgBW,EAAM,SAAS;AAAA,MAAA,CACvC;AAAA,IAAA,CACJ;AAAA,EAAA;AAAA,EAGL,MAAM,0BAA0B;AAC5B,QAAIN,EAAA,MAAKL,IAAe;AACd,YAAA,EAAE,MAAAY,MAAS,MAAMP,EAAA,MAAKR,GAAY,wBAAwBQ,EAAA,MAAKL,EAAa;AAElF,MAAIY,IACKP,EAAA,MAAAN,GAAsB,SAASa,CAAI,IAEnCP,EAAA,MAAAN,GAAsB,SAAS,MAAS;AAAA,IACjD;AAAA,EACJ;AAAA,EAGJ,MAAM,mBAAmBc,GAAkB;;AACvC,KAAAC,IAAAT,EAAA,MAAKP,OAAL,QAAAgB,EAA0B,iBAAiB,iBAAiBT,EAAA,MAAKJ;AAC3D,UAAAW,IAAOP,EAAA,MAAKN,GAAsB,SAAS;AAEjD,IAAIa,IACAP,EAAA,MAAKN,GAAsB,SAAS;AAAA,MAChC,IAAIa,EAAK;AAAA,MACT,cAAcA,EAAK;AAAA,MACnB,iBAAiBC;AAAA,IAAA,CACpB,IAEDR,EAAA,MAAKN,GAAsB,SAAS;AAAA,MAChC,IAAI;AAAA,MACJ,cAAcM,EAAA,MAAKL;AAAA,MACnB,iBAAiBa;AAAA,IAAA,CACpB;AAAA,EACL;AAAA,EAOG,OAAO;;AACN,QAAAE,IAAWV,EAAA,MAAKN,GAAsB,SAAS;AAEnD,IAAIgB,OACKD,IAAAT,EAAA,MAAAR,OAAA,QAAAiB,EAAa,wBAAwBC;AAAA,EAC9C;AAAA,EAGJ,gBAAwB;AACb,WAAAC;AAAA,EAAA;AAEf;AA1EInB,IAAA,eACAC,IAAA,eAEAC,IAAA,eAGAC,IAAA,eAqDAC,IAAA;AAmBG,MAAMK,IACT,IAAIW,EAA6CxB,EAA4B,IAAI;"}