{"version":3,"file":"documenttypesettings.element-CpUk9MJN.js","sources":["../../../assets/src/workspaces/views/documenttypesettings.element.ts"],"sourcesContent":["import { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport { LitElement, html, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { DOCUMENTTYPE_SETTINGS_CONTEXT, DocumentTypeSettingsContext } from './documenttypesettings.context';\r\nimport { DocumentTypeSettingsSchema } from '../../api';\r\nimport { UmbPropertyDatasetElement, UmbPropertyValueData } from '@umbraco-cms/backoffice/property';\r\n\r\n@customElement('documenttype-settings-root')\r\nexport class DocumentTypeSettingsWorkspaceElement extends UmbElementMixin(LitElement) {\r\n    #documentTypeSettingsContext?: DocumentTypeSettingsContext;\r\n\r\n    @property()\r\n    title = \"DocumentType Settings\";\r\n\r\n    @state()\r\n    settings?: DocumentTypeSettingsSchema;\r\n\r\n    @state()\r\n    propertyValueData?: UmbPropertyValueData[] = [];\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(DOCUMENTTYPE_SETTINGS_CONTEXT, (_instance) => {\r\n            this.#documentTypeSettingsContext = _instance;\r\n\r\n            this.observe(_instance.documentTypeSettings, (_settings: DocumentTypeSettingsSchema) => {\r\n                this.settings = _settings;\r\n            });\r\n        });\r\n    }\r\n\r\n    connectedCallback(): void {\r\n        super.connectedCallback();\r\n\r\n        if (this.#documentTypeSettingsContext) {\r\n            this.getDocumentTypeSettings();\r\n        }\r\n    }\r\n\r\n    async getDocumentTypeSettings() {\r\n        await this.#documentTypeSettingsContext?.getDocumentTypeSettings();\r\n\r\n        this.propertyValueData = [\r\n            {\r\n                alias: 'commentsEnabled',\r\n                value: this.settings?.commentsEnabled\r\n            }\r\n        ]\r\n    }\r\n\r\n    async setDocumentTypeSettings(enabled: boolean) {\r\n        await this.#documentTypeSettingsContext?.setCommentsEnabled(enabled);\r\n\r\n        this.propertyValueData = [\r\n            {\r\n                alias: 'commentsEnabled',\r\n                value: this.settings?.commentsEnabled\r\n            }\r\n        ];\r\n    }\r\n\r\n    #onDataChange(e: Event) {\r\n        const value = (e.target as UmbPropertyDatasetElement).value;\r\n        value.forEach((item) => {\r\n            switch(item.alias){\r\n                case 'commentsEnabled':\r\n                    this.setDocumentTypeSettings(item.value as boolean);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <umb-body-layout>\r\n                <uui-box>\r\n                    <div slot=\"headline\">Settings</div>\r\n                    <umb-property-dataset .value=${this.propertyValueData!} @change=${this.#onDataChange}>\r\n                        <umb-property \r\n                            alias='commentsEnabled'\r\n                            label='Comments enabled'\r\n                            description='Check this box if you want to enable comments for all pages of this document type'\r\n                            property-editor-ui-alias='Umb.PropertyEditorUi.Toggle'\r\n                            val>\r\n                        </umb-property>\r\n                    </umb-property-dataset>\r\n                </uui-box>\r\n            </umb-body-layout>\r\n        `\r\n    }\r\n}\r\n\r\nexport default DocumentTypeSettingsWorkspaceElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'documenttype-settings-root': DocumentTypeSettingsWorkspaceElement\r\n    }\r\n}"],"names":["_documentTypeSettingsContext","_DocumentTypeSettingsWorkspaceElement_instances","onDataChange_fn","DocumentTypeSettingsWorkspaceElement","UmbElementMixin","LitElement","__privateAdd","DOCUMENTTYPE_SETTINGS_CONTEXT","_instance","__privateSet","_settings","__privateGet","_a","_b","enabled","html","__privateMethod","e","item","__decorateClass","property","state","customElement","DocumentTypeSettingsWorkspaceElement$1"],"mappings":";;;;;;;;;wXAAAA,GAAAC,GAAAC;AAOO,IAAMC,IAAN,cAAmDC,EAAgBC,CAAU,EAAE;AAAA,EAYlF,cAAc;AACJ,UAAA,GAbPC,EAAA,MAAAL,CAAA,GACHK,EAAA,MAAAN,CAAA,GAGQ,KAAA,QAAA,yBAMR,KAAA,oBAA6C,CAAC,GAKrC,KAAA,eAAeO,GAA+B,CAACC,MAAc;AAC9D,MAAAC,EAAA,MAAKT,GAA+BQ,CAAA,GAEpC,KAAK,QAAQA,EAAU,sBAAsB,CAACE,MAA0C;AACpF,aAAK,WAAWA;AAAA,MAAA,CACnB;AAAA,IAAA,CACJ;AAAA,EAAA;AAAA,EAGL,oBAA0B;AACtB,UAAM,kBAAkB,GAEpBC,QAAKX,CAA8B,KACnC,KAAK,wBAAwB;AAAA,EACjC;AAAA,EAGJ,MAAM,0BAA0B;;AACtB,YAAAY,IAAAD,EAAA,MAAKX,OAAL,gBAAAY,EAAmC,4BAEzC,KAAK,oBAAoB;AAAA,MACrB;AAAA,QACI,OAAO;AAAA,QACP,QAAOC,IAAA,KAAK,aAAL,gBAAAA,EAAe;AAAA,MAAA;AAAA,IAE9B;AAAA,EAAA;AAAA,EAGJ,MAAM,wBAAwBC,GAAkB;;AACtC,YAAAF,IAAAD,EAAA,MAAKX,CAA8B,MAAnC,gBAAAY,EAAmC,mBAAmBE,KAE5D,KAAK,oBAAoB;AAAA,MACrB;AAAA,QACI,OAAO;AAAA,QACP,QAAOD,IAAA,KAAK,aAAL,gBAAAA,EAAe;AAAA,MAAA;AAAA,IAE9B;AAAA,EAAA;AAAA,EAcJ,SAAS;AACE,WAAAE;AAAA;AAAA;AAAA;AAAA,mDAIoC,KAAK,iBAAkB,YAAYC,EAAA,MAAKf,GAAaC,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAaxG;AAlFIF,IAAA,oBAAA,QAAA;AADGC,IAAA,oBAAA,QAAA;AAsDHC,IAAa,SAACe,GAAU;AAEd,EADSA,EAAE,OAAqC,MAChD,QAAQ,CAACC,MAAS;AACpB,YAAOA,EAAK,OAAM;AAAA,MACd,KAAK;AACI,aAAA,wBAAwBA,EAAK,KAAgB;AAClD;AAAA,IAAA;AAAA,EACR,CACH;AACL;AA3DAC,EAAA;AAAA,EADCC,EAAS;AAAA,GAHDjB,EAIT,WAAA,SAAA,CAAA;AAGAgB,EAAA;AAAA,EADCE,EAAM;AAAA,GANElB,EAOT,WAAA,YAAA,CAAA;AAGAgB,EAAA;AAAA,EADCE,EAAM;AAAA,GATElB,EAUT,WAAA,qBAAA,CAAA;AAVSA,IAANgB,EAAA;AAAA,EADNG,EAAc,4BAA4B;AAAA,GAC9BnB,CAAA;AAqFb,MAAAoB,IAAepB;"}